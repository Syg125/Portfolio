CREATE DATABASE XYZ;
USE XYZ;
CREATE TABLE EMPLOYEEINFO(
ID INT PRIMARY KEY,
NAME VARCHAR(50),
SALARY INT
);
SELECT * FROM EMPLOYEEINFO;
INSERT INTO EMPLOYEEINFO VALUES(
010,"ADAM",25000),
(020,"BOB",30000),
(030,"CASEY",40000
);
create table student2(
ID int UNIQUE);
SELECT * FROM STUDENT2;
INSERT INTO STUDENT2 VALUES(
010),(020);
INSERT INTO STUDENT2 VALUES(030);



CREATE TABLE STUDENT3(
ID INT,
S_CODE INT,
NAME VARCHAR(40),
SURNAME VARCHAR(40),
PRIMARY KEY(S_CODE,SURNAME));
SELECT * FROM STUDENT3;
INSERT INTO STUDENT3 VALUES
(02,0023,"SAM","ROY");
INSERT INTO STUDENT3 VALUES
(03,0043,"ANN","D'COD");
INSERT INTO STUDENT3 VALUES(03,0043,"DAN","CODE");
INSERT INTO STUDENT3 VALUES(03,0043,"DAN","CODE");



CREATE TABLE STUDENT4(
ID INT,
NAME VARCHAR(40),
S_CODE INT,
FOREIGN KEY(S_CODE) REFERENCES STUDENT3(S_CODE));
SELECT * FROM STUDENT4;
INSERT INTO STUDENT4 VALUES(
03,"ANN",0043);

CREATE TABLE STUDENT5(
ID INT,
SALARY INT DEFAULT 25000);
SELECT * FROM STUDENT5;
INSERT INTO STUDENT5(ID) VALUES (03);

CREATE DATABASE COLNEY;
USE COLNEY;
USE COLNEY1;

CREATE TABLE COLNEY1(
ROLLNO INT PRIMARY KEY,
name varchar(50),
marks int not null,
grade varchar(1),
city varchar(30)
);

INSERT INTO COLNEY1 VALUES
(101,"ANIL",78,"C","PUNE"),
(102,"BHUMIKA",93,"A","MUMBAI"),
(103,"CHETAN",85,"B", "MUMBAI"),
(104,"DHRUV",96,"A", "DELHI"),
(105, "EMANUAL",12,"F","DELHI"),
(106, "FARAH",82,"B","DELHI");

SELECT * FROM COLENY;

ALTER TABLE COLNEY1 
CHANGE name FULL_NAME VARCHAR(50);
DELETE FROM COLNEY1 WHERE MARKS<50;
ALTER TABLE COLNEY1 DROP COLUMN GRADE;
ALTER TABLE COLNEY1  CHANGE LOCATION CITY VARCHAR(50);
SELECT * FROM COLNEY1;

SELECT AVG(MARKS) FROM COLNEY1;

SELECT NAME,MARKS FROM COLNEY1 WHERE MARKS>86;

SELECT NAME,MARKS FROM COLNEY1 WHERE MARKS > (SELECT AVG(MARKS) FROM COLNEY1);

SELECT ROLLNO,NAME FROM COLNEY1 WHERE (ROLLNO%2=0);

SELECT NAME,ROLLNO FROM COLNEY1 WHERE ROLLNO IN (102,104,106,110,112);

SELECT NAME,ROLLNO FROM COLNEY1 WHERE ROLLNO IN (SELECT ROLLNO FROM COLNEY1 WHERE ROLLNO%2=0);

SET SQL_SAFE_UPDATES=0;

SELECT ROLLNO,NAME FROM COLNEY1;


SELECT DISTINCT CITY FROM COLNEY1;
 
SELECT * FROM COLNEY1 WHERE MARKS<80;

SELECT CITY FROM COLNEY1 WHERE MARKS<70;

SELECT DISTINCT CITY FROM COLNEY1 WHERE MARKS>80;

SELECT * FROM COLNEY1 WHERE CITY ="PUNE" AND NAME="ANIL";
SELECT * FROM COLNEY1 WHERE CITY ="PUNE" OR MARKS>=90;
SELECT * FROM COLNEY1 WHERE MARKS BETWEEN 70 AND 90;
SELECT * FROM COLNEY1 WHERE CITY IN ("DELHI");
SELECT * FROM COLNEY1 WHERE CITY NOT IN ("DELHI");
SELECT * FROM COLNEY1 WHERE CITY IN ("DELHI") LIMIT 4;
SELECT * FROM COLNEY1 WHERE MARKS > 50 LIMIT 4;
SELECT * FROM COLNEY1 ORDER BY CITY ASC;
SELECT * FROM COLNEY1 ORDER BY MARKS ASC;
SELECT * FROM COLNEY1 ORDER BY MARKS DESC;
SELECT * FROM COLNEY1 ORDER BY MARKS DESC LIMIT 3;
SELECT * FROM COLNEY1 WHERE MARKS+10 >100;
SELECT * FROM COLNEY1 WHERE MARKS=85;
SELECT * FROM COLNEY1 WHERE MARKS>=85;

SELECT * FROM COLNEY1 WHERE MARKS<50 AND CITY IN ("MUMBAI","DELHI","PUNE") ORDER BY CITY ASC LIMIT 5;
SELECT * FROM COLNEY1 WHERE MARKS BETWEEN 70 AND 90 AND CITY IN ("MUMBAI","DELHI","PUNE") ORDER BY CITY ASC LIMIT 3;
SELECT * FROM COLNEY1 WHERE MARKS+10>60 AND CITY IN ("MUMBAI","DELHI","PUNE") ORDER BY CITY ASC LIMIT 3;
SELECT * FROM COLNEY1 WHERE ROLLNO BETWEEN 101 AND 105 AND CITY IN("DELHI") OR NAME ="ANIL";
SELECT * FROM COLNEY1 WHERE MARKS > 90 AND ROLLNO BETWEEN 101 AND 105 AND CITY IN("DELHI") OR NAME ="ANIL";

SELECT MAX(MARKS) FROM COLNEY1;
SELECT MIN(MARKS) FROM COLNEY1;
SELECT AVG(MARKS) FROM COLNEY1;
SELECT COUNT(ROLLNO) FROM COLNEY1;
SELECT DISTINCT(CITY) FROM COLNEY1;

SELECT CITY FROM COLNEY1 GROUP BY CITY;
SELECT CITY,COUNT(MARKS) FROM COLNEY1 GROUP BY CITY;
SELECT CITY,COUNT(ROLLNO) FROM COLNEY1 GROUP BY CITY;
SELECT CITY ,MARKS,COUNT(ROLLNO) FROM COLNEY1 GROUP BY CITY,MARKS;
SELECT ROLLNO,NAME,MAX(MARKS) FROM COLNEY1 GROUP BY ROLLNO,NAME;
SELECT CITY,AVG(MARKS) FROM COLNEY1 GROUP BY CITY;

SELECT CITY,AVG(MARKS) FROM COLNEY1 GROUP BY CITY ORDER BY CITY ASC;
SELECT CITY,AVG(MARKS) FROM COLNEY1 GROUP BY CITY ORDER BY CITY DESC;

SELECT MODE, COUNT(CUSTOMERS) FROM PAYMENTS GROUP BY MODE;

SELECT GRADE,COUNT(ROLLNO) FROM COLNEY1 GROUP BY GRADE ORDER BY GRADE;

SELECT CITY,COUNT(ROLLNO) FROM COLNEY1 GROUP BY CITY HAVING MAX(MARKS)>90;
SELECT CITY,COUNT(ROLLNO) FROM COLNEY1 GROUP BY CITY HAVING (GRADE)="A";

SELECT CITY, COUNT(ROLLNO)
FROM COLNEY1
GROUP BY CITY 
HAVING MAX(MARKS)>90;

SELECT CITY 
FROM COLNEY1
WHERE GRADE = "A"
GROUP BY CITY
HAVING MAX(MARKS)>=93
ORDER BY CITY DESC;

UPDATE COLNEY1
SET GRADE = "O"
WHERE GRADE = "A";

SET SQL_SAFE_UPDATES = 0;

SELECT * FROM COLNEY1;

UPDATE COLNEY1
SET MARKS = 80
WHERE ROLLNO = 105;

UPDATE COLNEY1
SET GRADE = "B"
WHERE NAME = "EMANUAL";

UPDATE COLNEY1
SET GRADE = "B"
WHERE MARKS BETWEEN 80 AND 90;

UPDATE COLNEY1
SET MARKS =MARKS+5;

UPDATE COLNEY1
SET MARKS = 12
WHERE NAME = "EMANUAL";

SET SQL_SAFE_UPDATES=0;

DELETE FROM COLNEY1
WHERE MARKS <20;

UPDATE COLNEY1
SET GRADE = "A"
WHERE GRADE = "O";

CREATE TABLE DEPT(
ID INT PRIMARY KEY,
name varchar(50)
);

CREATE TABLE TEACHER(
ID INT PRIMARY KEY,
name varchar(50),
DEPTID INT,
FOREIGN KEY (DEPTID) REFERENCES DEPT(ID)
ON UPDATE CASCADE
ON DELETE CASCADE
);


USE COLNEY;
SELECT * FROM DEPT;


UPDATE DEPT
SET ID = 102
WHERE ID = 101;

DROP TABLE TEACHER;

INSERT INTO DEPT 
VALUES
(102,"RAM"),
(103,"SHAM");

INSERT INTO TEACHER
VALUES
(110,"KAN",103),
(120,"DAN",102);

UPDATE DEPT
SET ID = 104
WHERE ID = 103;

ALTER TABLE COLNEY1 ADD COLUMN AGE INT;
ALTER TABLE COLNEY1 DROP COLUMN AGE;
ALTER TABLE COLNEY1 ADD COLUMN AGE INT NOT NULL DEFAULT 19;
ALTER TABLE COLNEY1 MODIFY COLUMN AGE VARCHAR(2);

ALTER TABLE COLNEY1 CHANGE AGE STUN_AGE INT;
ALTER TABLE COLNEY1 DROP COLUMN STUN_AGE;
ALTER TABLE COLNEY1 RENAME TO COLNEY2;
ALTER TABLE COLNEY2 RENAME TO COLNEY1;

SELECT * FROM COLNEY1;
SELECT * FROM TEACHER;
USE COLNEY;
INSERT INTO COLNEY1
VALUES
(109,"VARUN",80,"B","PUNE",21);
INSERT INTO COLNEY1
VALUES
(110,"SAMI",82,"A","KOTA",09);

INSERT INTO COLNEY1 
VALUES
(112 ,"JAJU",90,"A","DONK",23);

INSERT INTO COLNEY1 VALUES (113,"DK",88,"A","TOMB",100);

TRUNCATE TABLE TEACHER;

CREATE DATABASE INSTITUTE;
USE INSTITUTE;

CREATE TABLE INSTITUTE1(
ID INT PRIMARY KEY,
NAME VARCHAR(50));

INSERT INTO INSTITUTE1 VALUES
(102, "SAMMER"),
(013,"ANDY"),
(123,"SANDY");

SELECT * FROM INSTITUTE1;
SELECT * FROM COURSE1;

CREATE TABLE COURSE1(
ID INT PRIMARY KEY,
NAME VARCHAR(50));

INSERT INTO COURSE1 VALUES
(102, "ENGLISH"),
(013, "SCIENCE"),
(112, "MATHS"),
(134, "GEO");

SELECT * FROM INSTITUTE1
INNER JOIN COURSE1
ON INSTITUTE1.ID = COURSE1.ID;

SELECT * FROM INSTITUTE1 AS I
INNER JOIN COURSE1 AS C
ON I.ID = C.ID;

SELECT * FROM INSTITUTE1 AS I
LEFT JOIN COURSE1 AS C
ON I.ID = C.ID;

SELECT * FROM INSTITUTE1 AS I
RIGHT JOIN COURSE1 AS C
ON I.ID = C.ID;

SELECT * FROM INSTITUTE1 AS I
LEFT JOIN COURSE1 AS C
ON I.ID = C.ID
UNION
SELECT * FROM INSTITUTE1 AS I
RIGHT JOIN COURSE1 AS C
ON I.ID = C.ID; 

SELECT * FROM institute1 AS I
LEFT JOIN COURSE1 AS C
ON I.ID = C.ID
WHERE C.ID IS NULL;

SELECT * FROM institute1 AS I
RIGHT JOIN COURSE1 AS C
ON I.ID = C.ID
WHERE I.ID IS NULL;


SELECT * FROM INSTITUTE1 AS I
LEFT JOIN COURSE1 AS C
ON I.ID = C.ID
WHERE C.ID IS NULL
UNION
SELECT * FROM INSTITUTE1 AS I
RIGHT JOIN COURSE1 AS C
ON I.ID = C.ID
WHERE I.ID IS NULL; 

SELECT * FROM INSTITUTE1 AS I
LEFT JOIN COURSE1 AS C
ON I.ID = C.ID
WHERE C.ID IS NOT NULL
UNION
SELECT * FROM INSTITUTE1 AS I
RIGHT JOIN COURSE1 AS C
ON I.ID = C.ID
WHERE I.ID IS NOT NULL;

SELECT * FROM EMPLOYEE;
USE INSTITUTE;

CREATE TABLE EMPLOYEE(
ID INT PRIMARY KEY,
NAME VARCHAR(50),
MANAGER_ID INT);

INSERT INTO EMPLOYEE 
VALUES
(101,"ANDY",103),
(102,"BOB",104),
(103,"CHALLS",NULL),
(104, "DONALD",103);

SELECT *
FROM EMPLOYEE AS A
JOIN EMPLOYEE AS B
ON A.ID = B.MANAGER_ID;
 
SELECT A.NAME AS MANAGER_NAME ,B.NAME
FROM EMPLOYEE AS A
JOIN EMPLOYEE AS B
ON A.ID = B.MANAGER_ID;

CREATE TABLE EMPLOYEE2(
EMP_ID INT,
NAME VARCHAR(50),
MANAGER_ID INT);

INSERT INTO EMPLOYEE2 
VALUES
(1,"ANDY",NULL),
(2,"BOB",1),
(3,"CHALLS",1),
(4, "DONALD",2);

DROP TABLE EMPLOYEE1;

SELECT * FROM EMPLOYEE2;

SELECT NAME FROM EMPLOYEE2
UNION 
SELECT MANAGER_ID FROM EMPLOYEE2;

SELECT NAME FROM EMPLOYEE2
UNION ALL
SELECT NAME FROM EMPLOYEE2;

SELECT 
  E.EMPLOYEE_name AS Employee,
  M.EMPLOYEE_name AS Manager
FROM 
  employees AS E
LEFT JOIN 
  employees AS M
ON 
  E.manager_id = M.emp_id;